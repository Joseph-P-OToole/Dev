@page "/Samples"
@inject SkillData SkillData;

<PageTitle>Skills</PageTitle>
<div class="pageContainer">
    <div class="topContainer">
        <div @onclick="() => SetLightBox()" class=@($"imageContainer disableSelect { imgBoxClassName }")>
            @if(galleryImage != "") {
                <img class="skillImg" src=@($"assets/screenshots/{ @galleryImage }.png") alt=@($"{ @galleryImage }") />
                <h4>click to expand</h4>
            }
        </div>
        <div class=@($"textContainer { imgBoxClassName }") >
            <h4 class="skillName">
                @galleryTitle
            </h4>
            <p class="skillDesc">
                @galleryDescription <br />
                @if(galleryLink != "")
                {
                    <a class="skillLink" href=@($"{ @galleryLink }") title=@($"{ @galleryLink }") target="_blank">
                        check it out&nbsp;<span class="oi oi-arrow-thick-right"></span>
                    </a>
                }
            </p>
        </div>
        <a class="nav-link pageLink disableSelect slideFromLeft" href="Hire" Match="NavLinkMatch.All">Hire<span class="oi oi-account-login" aria-hidden="true"></span>
        </a>
    </div>
    <div class="bottomContainer">
        @for(int i = 0; i < SkillData.skillIcons.Count(); i++) {
            int idx = i;
            <div @onclick="() => SetGallery(idx)" class=@($"skillIconWrapper disableSelect { getState(i) } ")>
                <img class="skillIcon disableSelect" src=@($"assets/techLogos/{ SkillData.skillIcons[i] }.png") alt=@($"{ SkillData.skillIcons[i] }") />
            </div>
        }
    </div>
</div>
<div @onclick="() => ClearContent()" class=@($"lightBox { lightBoxClassName }")>
    <div class="contentContainer">
        @if(lightBoxSet) {
            <img class="lightBoxImg" src=@($"assets/screenshots/{ @galleryImage }.png") alt=@($"{ @galleryImage }") />
            <h4 class="lightBoxText disableSelect">
                click anywhere to close
            </h4>
        }
    </div>
</div>

@code {
    string galleryDescription = "";
    string galleryTitle = "";
    string galleryImage = "";
    string galleryLink = "";
    int selectedIdx = -1;
    bool lightBoxSet = false;
    string imgBoxClassName = "";
    string textBoxClassName = "";
    string lightBoxClassName = "hide";
    bool firstLoad = true;

    private string getState(int idx) {
        if(idx == selectedIdx) {
            return "active";
        }else {
            return "";
        }
    }// getState

    private async Task SetGallery(int idx) {
        if(idx != -1 && idx != selectedIdx) {
            if(firstLoad == false) {
                imgBoxClassName = "imgInactive";
                textBoxClassName = "textInactive";
                await Task.Delay(200);
                StateHasChanged();
            }
            selectedIdx = idx;
            galleryDescription = SkillData.skillDescriptions[idx];
            galleryTitle = SkillData.skillNames[idx];
            galleryImage = SkillData.skillImages[idx];
            galleryLink = SkillData.skillLinks[idx];
            if(firstLoad == false) {
                imgBoxClassName = "imgActive";
                textBoxClassName = "textActive";
            }
            await Task.Delay(1);
            StateHasChanged();
        }else {
            return;
        }
    }// SetGallery

    protected override async Task OnInitializedAsync() {
            await SetGallery(0);
            StateHasChanged();
            firstLoad = false;
    }// OnInitializedAsync

    private void lightBoxSetClassName() {
        if(lightBoxSet) {
            lightBoxClassName = "show fadeIn";
        }else {
            lightBoxClassName = "show fadeOut";
            StateHasChanged();
            Task.Delay(500);
            lightBoxClassName = "hide";
        }
    }// lightBoxCetClassName

    public async void SetLightBox() {
        lightBoxSet = true;
        lightBoxSetClassName();
        await Task.Delay(1);
    }// SetLightBox

    public void ClearContent() {
        lightBoxSet = false;
        lightBoxSetClassName();
        StateHasChanged();
    }// ClearContent
}